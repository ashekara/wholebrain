q()
help()
install.packages(swirl)
install.packages("swirl")
swirl()
library(swirl)
swirl()
library
library()
swirl
swirl()
library(swirl)
exit()
esc()
install.packages("devtools")
library(pkgbuild)
find_rtools()
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
ROpenCVLite::installOpenCV()
esc
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("ROpenCVLite")
lib
?lib
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch"
)
load("C:/Users/Aniruddha/Downloads/ontology.RData")
ontology$id
ontology$acronym
ontology$parent
ontology$allen.color
load("C:/Users/Aniruddha/Downloads/atlasOntology.RData")
View(atlasOntology)
View(ontology)
dir
dirname
dirname()
dir()
write.table(ontology, file = ontology.txt, append = FALSE, sep = " ", dec = ".",
row.names = TRUE, col.names = TRUE)
write.table(ontology, file = "ontology.txt"", append = FALSE, sep = " ", dec = ".",
row.names = TRUE, col.names = TRUE)
write.table(ontology, file = "ontology.txt", append = FALSE, sep = " ", dec = ".",  row.names = TRUE, col.names = TRUE)
install.packages("devtools")
devtools::install_github("r-lib/devtools")
devtools::install_github("r-lib/devtools")
library(pkgbuild)find_rtools()
library(pkgbuild)
find_rtools()
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("devtools")
devtools::install_github("r-lib/devtools")
devtools
library(devtools)
lib
library
installed.packages
installed.packages(devtools)
installed.packages("devtools")
devtools
library(devtools)
installed.packages()
check("glue")
check(glue)
library(devtools)
library(pkgbuild)find_rtools()
library(pkgbuild)
find_rtools()
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("r-lib/devtools")
install.packages("devtools")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("devtools")
library(pkgbuild);find_rtools()
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("devtools")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("devtools")
fs
library(fs)
devtools::install_github("r-lib/devtools")
install.packages("devtools")
install.packages("fs")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("backports")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("devtools")
devtools::install_github("swarm-lab/ROpenCVLite", INSTALL_opts="--no-multiarch")
install.packages("fansi")
devtools::install_github("swarm-lab/ROpenCVLite", INSTALL_opts="--no-multiarch")
install.packages("Rcpp")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("Rcpp")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
install.packages("Rcpp")
devtools::install_github("swarm-lab/ROpenCVLite", ref = "v0.3.410", INSTALL_opts="--no-multiarch")
ROpenCVLite::installOpenCV()
devtools::install_github("tractatus/wholebrain", args="--no-multiarch")
ibrary(wholebrain);filename<-system.file('sample_tiles/rabiesEGFP.tif', package='wholebrain'); output<-segment(filename)
library(wholebrain;filename<-system.file('sample_tiles/rabiesEGFP.tif', package='wholebrain'); output<-segment(filename)
library(wholebrain);filename<-system.file('sample_tiles/rabiesEGFP.tif', package='wholebrain'); output<-segment(filename)
library(devtools)
install_github("mjin1812/SMART")
library(SMART)
?SMART
library(SMART)
library(wholebrain)
library(SMART)
create.registration.plate()
?create.registration.plate()
load("C:/Users/Aniruddha/Downloads/atlasIndex.RData")
View(atlasIndex)
load("C:/Users/Aniruddha/Downloads/EPSatlas.RData")
View(EPSatlas)
EPSatlas.plates
EPSatlas
EPSatlas$plates[1]
EPSatlas$plates[2]
EPSatlas$plate.info[2]
create.registration.plate
View(atlasIndex)
View(atlasIndex)
load("~/R/win-library/3.6/wholebrain/data/atlasOntology.RData")
View(atlasOntology)
View(atlasOntology)
View(atlasIndex)
View(atlasIndex)
library(wholebrain)
pckgdir<- "C:/Users/Public/Documents/R/win-library/3.5/ratbrain/"
ontology <- read.csv(paste0(pckgdir, "data/ontology.csv"))
atlasOntology <- list(id = ontology$id, acronym = ontology$acronym, name = ontology$name, parent = ontology$parent)
save(ontology, file = "ontology.RData")
save(atlasOntology, file = "atlasOntology.RData")
head(atlasIndex)
library(wholebrain)
library(SMART)
rm(list=ls())
load(setup$savepaths$envir_savepath)
load("D:/Rat3/Rat3_rotated_croppped/Output/R_data/Animal_Rat3_2020-06-01_AS.RData")
atlasIndex
rm(atlasIndex)
library(SMART)
load("~/data and brainmap-original/data/ontology.RData")
View(ontology)
aliases <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/help/aliases.rds")
aliases
paths <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/help/paths.rds")
paths
data <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/data.rds")
data
str(data)
nsInfo <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/nsInfo.rds")
nsInfo
features <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/features.rds")
hsearch <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/hsearch.rds")
links <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/links.rds")
package <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/package.rds")
Rd <- readRDS("C:/Users/Aniruddha/Documents/R/win-library/3.6/wholebrain/Meta/Rd.rds")
View(data)
View(data)
View(features)
View(features)
View(hsearch)
View(nsInfo)
View(package)
View(Rd)
hsearch[[1]]
hsearch[[2]]
hsearch[[3]
]
hsearch[[4]]
detach(unload = TRUE)
rm(list=ls())
detach(unload = TRUE)
library(wholebrain)
data(ontology)
View(ontology)
detach(unload = TRUE)
library(wholebrain)
rm(ontology)
data(ontology)
library(SMART)
detach
detach(unload=FALSE)
detach
rm(ontology)
detach(wholebrain)
detach(packages::wholebrain,unload=TRUE)
detach(packages:wholebrain,unload=TRUE)
detach("packages:wholebrain")
detach("package:wholebrain")
library(wholebrain)
data(ontology)
detach("package:wholebrain",unload=TRUE)
rm(ontology)
library(wholebrain)
data(ontology)
rm(ontology)
detach("package:wholebrain",unload=TRUE)
library(wholebrain)
data(ontology)
rm(list=ls)
rm(list=ls())
library(wholebrain)
color.from.acronym('pc')
color.from.acronym('EPl')
data(ontology)
View(ontology)
rm(ontology)
wholebrain::data
rm(list=ls())
load_all(path="package:wholebrain")
library(devtools)
load_all(path="package:wholebrain")
package:wholebrain
setwd("~/R/win-library/3.6/wholebrain")
load_all(getwd())
remove.packages(wholebrain)
remove.packages("wholebrain")
install_github("ashekara/wholebrain")
load_all(getwd())
librar(wholebrain)
library(wholebrain)
load_all(getwd())
data(ontology)
wholebrain
color.from.acronym()
force(ldahist)
?load_all
load_all(getwd(),recompile=TRUE)
load_all(getwd(),export_all=FALSe)
load_all(getwd(),export_all=FALSE)
load_all(getwd())
load_all(getwd(),export_all=FALSE)
load_all("./")
library(wholebrain)
library(wholebrain)
color.from.acronym("Epl")
color.from.acronym("EPl")
color.from.acronym("pc")
data(ontology)
View(ontology)
color.from.id(1072)
color.from.id(45)
color.from.acronym
remove.packages(wholebrain)
remove.packages("wholebrain")
library(devtools)
setwd("~/GitHub/wholebrain")
load_all()
data(ontology)
library("ratbrain")
